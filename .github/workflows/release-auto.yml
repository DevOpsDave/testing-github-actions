# This GitHub action can publish assets for release when a tag is created.
# Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
#
# This uses an action (paultyng/ghaction-import-gpg) that assumes you set your
# private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
# secret. If you would rather own your own GPG handling, please fork this action
# or use an alternative one for key handling.
#
# You will need to pass the `--batch` flag to `gpg` in your signing step
# in `goreleaser` to indicate this is being used in a non-interactive mode.
#
name: release-auto
#on:
#  push:
#    tags:
#      - 'v*'

#on:
#  push:
#    branches: [ main, master, develop, US852217-automatic-release ]

#on: 
#  push:
#    branches:
#      - main

on:
  pull_request:
    types: [closed]

jobs:
  get_pull_request:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the PR that this merge came from
        uses: actions-ecosystem/action-get-merged-pull-request@136e2f3a66a0d28e8d85094e1042ddbe5abea267
        id: get-merged-pull-request
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      pull_request_labels: ${{ steps.get-merged-pull-request.outputs.labels }}
      pull_request_title: ${{ steps.get-merged-pull-request.outputs.title }}
      pull_request_body: ${{ steps.get-merged-pull-request.outputs.body }}

  goreleaser:
    runs-on: ubuntu-latest
    needs: 
      - get_pull_request
    if: ${{ (contains(needs.get_pull_request.outputs.pull_request_labels, 'release/patch') || contains(needs.get_pull_request.outputs.pull_request_labels, 'release/minor') || contains(needs.get_pull_request.outputs.pull_request_labels, 'release/major')) && github.event.pull_request.merged == true }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Unshallow
        run: git fetch --prune --unshallow

      #- name: Version Bump
      #  run: |
      #    out=$(git tag | tail -1)
      #    echo "The last tag was: $out"
      #    echo "The label is: ${{ needs.get_pull_request.outputs.pull_request_labels }}"

      #- name: Set github user
      #  run: |
      #    export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
      #    git config --global user.name 'github-actions[bot]'
      #    git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - uses: actions-ecosystem/action-release-label@v1
        id: release-label
        if: ${{ github.event.pull_request.merged == true }}

      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        if: ${{ steps.release-label.outputs.level != null }}

      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        if: ${{ steps.release-label.outputs.level != null }}
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: ${{ steps.release-label.outputs.level }}

      - uses: actions-ecosystem/action-push-tag@v1
        if: ${{ steps.release-label.outputs.level != null }}
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: '${{ steps.bump-semver.outputs.new_version }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}'
      
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
      - name: Import GPG key
        id: import_gpg
        uses: paultyng/ghaction-import-gpg@v2.1.0
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          
    
